{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toBeRequired = toBeRequired;\n\nvar _utils = require(\"./utils\"); // form elements that support 'required'\n\n\nvar FORM_TAGS = ['select', 'textarea'];\nvar ARIA_FORM_TAGS = ['input', 'select', 'textarea'];\nvar UNSUPPORTED_INPUT_TYPES = ['color', 'hidden', 'range', 'submit', 'image', 'reset'];\nvar SUPPORTED_ARIA_ROLES = ['combobox', 'gridcell', 'radiogroup', 'spinbutton', 'tree'];\n\nfunction isRequiredOnFormTagsExceptInput(element) {\n  return FORM_TAGS.includes((0, _utils.getTag)(element)) && element.hasAttribute('required');\n}\n\nfunction isRequiredOnSupportedInput(element) {\n  return (0, _utils.getTag)(element) === 'input' && element.hasAttribute('required') && (element.hasAttribute('type') && !UNSUPPORTED_INPUT_TYPES.includes(element.getAttribute('type')) || !element.hasAttribute('type'));\n}\n\nfunction isElementRequiredByARIA(element) {\n  return element.hasAttribute('aria-required') && element.getAttribute('aria-required') === 'true' && (ARIA_FORM_TAGS.includes((0, _utils.getTag)(element)) || element.hasAttribute('role') && SUPPORTED_ARIA_ROLES.includes(element.getAttribute('role')));\n}\n\nfunction toBeRequired(element) {\n  var _this = this;\n\n  (0, _utils.checkHtmlElement)(element, toBeRequired, this);\n  var isRequired = isRequiredOnFormTagsExceptInput(element) || isRequiredOnSupportedInput(element) || isElementRequiredByARIA(element);\n  return {\n    pass: isRequired,\n    message: function message() {\n      var is = isRequired ? 'is' : 'is not';\n      return [_this.utils.matcherHint(\"\".concat(_this.isNot ? '.not' : '', \".toBeRequired\"), 'element', ''), '', \"Received element \".concat(is, \" required:\"), \"  \".concat(_this.utils.printReceived(element.cloneNode(false)))].join('\\n');\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"script"}