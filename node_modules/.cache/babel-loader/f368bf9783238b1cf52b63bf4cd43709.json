{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toHaveTextContent = toHaveTextContent;\n\nvar _utils = require(\"./utils\");\n\nfunction toHaveTextContent(node, checkWith) {\n  var _this = this;\n\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n    normalizeWhitespace: true\n  };\n  (0, _utils.checkNode)(node, toHaveTextContent, this);\n  var textContent = options.normalizeWhitespace ? (0, _utils.normalize)(node.textContent) : node.textContent.replace(/\\u00a0/g, ' '); // Replace &nbsp; with normal spaces\n\n  var checkingWithEmptyString = textContent !== '' && checkWith === '';\n  return {\n    pass: !checkingWithEmptyString && (0, _utils.matches)(textContent, checkWith),\n    message: function message() {\n      var to = _this.isNot ? 'not to' : 'to';\n      return (0, _utils.getMessage)(_this, _this.utils.matcherHint(\"\".concat(_this.isNot ? '.not' : '', \".toHaveTextContent\"), 'element', ''), checkingWithEmptyString ? \"Checking with empty string will always match, use .toBeEmptyDOMElement() instead\" : \"Expected element \".concat(to, \" have text content\"), checkWith, 'Received', textContent);\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"script"}