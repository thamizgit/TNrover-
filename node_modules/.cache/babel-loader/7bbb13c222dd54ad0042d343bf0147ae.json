{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toHaveValue = toHaveValue;\n\nvar _isEqualWith = _interopRequireDefault(require(\"lodash/isEqualWith\"));\n\nvar _utils = require(\"./utils\");\n\nfunction toHaveValue(htmlElement, expectedValue) {\n  var _this = this;\n\n  (0, _utils.checkHtmlElement)(htmlElement, toHaveValue, this);\n\n  if (htmlElement.tagName.toLowerCase() === 'input' && ['checkbox', 'radio'].includes(htmlElement.type)) {\n    throw new Error('input with type=checkbox or type=radio cannot be used with .toHaveValue(). Use .toBeChecked() for type=checkbox or .toHaveFormValues() instead');\n  }\n\n  var receivedValue = (0, _utils.getSingleElementValue)(htmlElement);\n  var expectsValue = expectedValue !== undefined;\n  var expectedTypedValue = expectedValue;\n  var receivedTypedValue = receivedValue;\n\n  if (expectedValue == receivedValue && expectedValue !== receivedValue) {\n    expectedTypedValue = \"\".concat(expectedValue, \" (\").concat(typeof expectedValue, \")\");\n    receivedTypedValue = \"\".concat(receivedValue, \" (\").concat(typeof receivedValue, \")\");\n  }\n\n  return {\n    pass: expectsValue ? (0, _isEqualWith.default)(receivedValue, expectedValue, _utils.compareArraysAsSet) : Boolean(receivedValue),\n    message: function message() {\n      var to = _this.isNot ? 'not to' : 'to';\n\n      var matcher = _this.utils.matcherHint(\"\".concat(_this.isNot ? '.not' : '', \".toHaveValue\"), 'element', expectedValue);\n\n      return (0, _utils.getMessage)(_this, matcher, \"Expected the element \".concat(to, \" have value\"), expectsValue ? expectedTypedValue : '(any)', 'Received', receivedTypedValue);\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"script"}