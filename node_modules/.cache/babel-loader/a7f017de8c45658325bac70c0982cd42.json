{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toBeInvalid = toBeInvalid;\nexports.toBeValid = toBeValid;\n\nvar _utils = require(\"./utils\");\n\nvar FORM_TAGS = ['form', 'input', 'select', 'textarea'];\n\nfunction isElementHavingAriaInvalid(element) {\n  return element.hasAttribute('aria-invalid') && element.getAttribute('aria-invalid') !== 'false';\n}\n\nfunction isSupportsValidityMethod(element) {\n  return FORM_TAGS.includes((0, _utils.getTag)(element));\n}\n\nfunction isElementInvalid(element) {\n  var isHaveAriaInvalid = isElementHavingAriaInvalid(element);\n\n  if (isSupportsValidityMethod(element)) {\n    return isHaveAriaInvalid || !element.checkValidity();\n  } else {\n    return isHaveAriaInvalid;\n  }\n}\n\nfunction toBeInvalid(element) {\n  var _this = this;\n\n  (0, _utils.checkHtmlElement)(element, toBeInvalid, this);\n  var isInvalid = isElementInvalid(element);\n  return {\n    pass: isInvalid,\n    message: function message() {\n      var is = isInvalid ? 'is' : 'is not';\n      return [_this.utils.matcherHint(\"\".concat(_this.isNot ? '.not' : '', \".toBeInvalid\"), 'element', ''), '', \"Received element \".concat(is, \" currently invalid:\"), \"  \".concat(_this.utils.printReceived(element.cloneNode(false)))].join('\\n');\n    }\n  };\n}\n\nfunction toBeValid(element) {\n  var _this2 = this;\n\n  (0, _utils.checkHtmlElement)(element, toBeValid, this);\n  var isValid = !isElementInvalid(element);\n  return {\n    pass: isValid,\n    message: function message() {\n      var is = isValid ? 'is' : 'is not';\n      return [_this2.utils.matcherHint(\"\".concat(_this2.isNot ? '.not' : '', \".toBeValid\"), 'element', ''), '', \"Received element \".concat(is, \" currently valid:\"), \"  \".concat(_this2.utils.printReceived(element.cloneNode(false)))].join('\\n');\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"script"}