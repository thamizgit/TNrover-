{"ast":null,"code":"\"use strict\";\n\nvar _toConsumableArray = require(\"E:\\\\tnrover\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/toConsumableArray\");\n\nvar _defineProperty = require(\"E:\\\\tnrover\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/defineProperty\");\n\nvar _construct = require(\"E:\\\\tnrover\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/construct\");\n\nvar _classCallCheck = require(\"E:\\\\tnrover\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _possibleConstructorReturn = require(\"E:\\\\tnrover\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"E:\\\\tnrover\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"E:\\\\tnrover\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\nvar _assertThisInitialized = require(\"E:\\\\tnrover\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/assertThisInitialized\");\n\nvar _wrapNativeSuper = require(\"E:\\\\tnrover\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/wrapNativeSuper\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NodeTypeError = exports.HtmlElementTypeError = void 0;\nexports.checkHtmlElement = checkHtmlElement;\nexports.checkNode = checkNode;\nexports.compareArraysAsSet = compareArraysAsSet;\nexports.deprecate = deprecate;\nexports.getMessage = getMessage;\nexports.getSingleElementValue = getSingleElementValue;\nexports.getTag = getTag;\nexports.matches = matches;\nexports.normalize = normalize;\nexports.parseCSS = parseCSS;\nexports.toSentence = toSentence;\n\nvar _redent = _interopRequireDefault(require(\"redent\"));\n\nvar _isEqual = _interopRequireDefault(require(\"lodash/isEqual\"));\n\nvar _cssTools = require(\"@adobe/css-tools\");\n\nvar GenericTypeError = /*#__PURE__*/function (_Error) {\n  _inherits(GenericTypeError, _Error);\n\n  function GenericTypeError(expectedString, received, matcherFn, context) {\n    var _this;\n\n    _classCallCheck(this, GenericTypeError);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GenericTypeError).call(this));\n    /* istanbul ignore next */\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(_assertThisInitialized(_assertThisInitialized(_this)), matcherFn);\n    }\n\n    var withType = '';\n\n    try {\n      withType = context.utils.printWithType('Received', received, context.utils.printReceived);\n    } catch (e) {// Can throw for Document:\n      // https://github.com/jsdom/jsdom/issues/2304\n    }\n\n    _this.message = [context.utils.matcherHint(\"\".concat(context.isNot ? '.not' : '', \".\").concat(matcherFn.name), 'received', ''), '', // eslint-disable-next-line @babel/new-cap\n    \"\".concat(context.utils.RECEIVED_COLOR('received'), \" value must \").concat(expectedString, \".\"), withType].join('\\n');\n    return _this;\n  }\n\n  return GenericTypeError;\n}(_wrapNativeSuper(Error));\n\nvar HtmlElementTypeError = /*#__PURE__*/function (_GenericTypeError) {\n  _inherits(HtmlElementTypeError, _GenericTypeError);\n\n  function HtmlElementTypeError() {\n    var _getPrototypeOf2;\n\n    _classCallCheck(this, HtmlElementTypeError);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(HtmlElementTypeError)).call.apply(_getPrototypeOf2, [this, 'be an HTMLElement or an SVGElement'].concat(args)));\n  }\n\n  return HtmlElementTypeError;\n}(GenericTypeError);\n\nexports.HtmlElementTypeError = HtmlElementTypeError;\n\nvar NodeTypeError = /*#__PURE__*/function (_GenericTypeError2) {\n  _inherits(NodeTypeError, _GenericTypeError2);\n\n  function NodeTypeError() {\n    var _getPrototypeOf3;\n\n    _classCallCheck(this, NodeTypeError);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return _possibleConstructorReturn(this, (_getPrototypeOf3 = _getPrototypeOf(NodeTypeError)).call.apply(_getPrototypeOf3, [this, 'be a Node'].concat(args)));\n  }\n\n  return NodeTypeError;\n}(GenericTypeError);\n\nexports.NodeTypeError = NodeTypeError;\n\nfunction checkHasWindow(htmlElement, ErrorClass) {\n  if (!htmlElement || !htmlElement.ownerDocument || !htmlElement.ownerDocument.defaultView) {\n    for (var _len3 = arguments.length, args = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n      args[_key3 - 2] = arguments[_key3];\n    }\n\n    throw _construct(ErrorClass, [htmlElement].concat(args));\n  }\n}\n\nfunction checkNode(node) {\n  for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    args[_key4 - 1] = arguments[_key4];\n  }\n\n  checkHasWindow.apply(void 0, [node, NodeTypeError].concat(args));\n  var window = node.ownerDocument.defaultView;\n\n  if (!(node instanceof window.Node)) {\n    throw _construct(NodeTypeError, [node].concat(args));\n  }\n}\n\nfunction checkHtmlElement(htmlElement) {\n  for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n    args[_key5 - 1] = arguments[_key5];\n  }\n\n  checkHasWindow.apply(void 0, [htmlElement, HtmlElementTypeError].concat(args));\n  var window = htmlElement.ownerDocument.defaultView;\n\n  if (!(htmlElement instanceof window.HTMLElement) && !(htmlElement instanceof window.SVGElement)) {\n    throw _construct(HtmlElementTypeError, [htmlElement].concat(args));\n  }\n}\n\nvar InvalidCSSError = /*#__PURE__*/function (_Error2) {\n  _inherits(InvalidCSSError, _Error2);\n\n  function InvalidCSSError(received, matcherFn, context) {\n    var _this2;\n\n    _classCallCheck(this, InvalidCSSError);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(InvalidCSSError).call(this));\n    /* istanbul ignore next */\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(_assertThisInitialized(_assertThisInitialized(_this2)), matcherFn);\n    }\n\n    _this2.message = [received.message, '', // eslint-disable-next-line @babel/new-cap\n    context.utils.RECEIVED_COLOR(\"Failing css:\"), // eslint-disable-next-line @babel/new-cap\n    context.utils.RECEIVED_COLOR(\"\".concat(received.css))].join('\\n');\n    return _this2;\n  }\n\n  return InvalidCSSError;\n}(_wrapNativeSuper(Error));\n\nfunction parseCSS(css) {\n  var ast = (0, _cssTools.parse)(\"selector { \".concat(css, \" }\"), {\n    silent: true\n  }).stylesheet;\n\n  if (ast.parsingErrors && ast.parsingErrors.length > 0) {\n    var _ast$parsingErrors$ = ast.parsingErrors[0],\n        reason = _ast$parsingErrors$.reason,\n        line = _ast$parsingErrors$.line;\n\n    for (var _len6 = arguments.length, args = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {\n      args[_key6 - 1] = arguments[_key6];\n    }\n\n    throw _construct(InvalidCSSError, [{\n      css: css,\n      message: \"Syntax error parsing expected css: \".concat(reason, \" on line: \").concat(line)\n    }].concat(args));\n  }\n\n  var parsedRules = ast.rules[0].declarations.filter(function (d) {\n    return d.type === 'declaration';\n  }).reduce(function (obj, _ref) {\n    var property = _ref.property,\n        value = _ref.value;\n    return Object.assign(obj, _defineProperty({}, property, value));\n  }, {});\n  return parsedRules;\n}\n\nfunction display(context, value) {\n  return typeof value === 'string' ? value : context.utils.stringify(value);\n}\n\nfunction getMessage(context, matcher, expectedLabel, expectedValue, receivedLabel, receivedValue) {\n  return [\"\".concat(matcher, \"\\n\"), // eslint-disable-next-line @babel/new-cap\n  \"\".concat(expectedLabel, \":\\n\").concat(context.utils.EXPECTED_COLOR((0, _redent.default)(display(context, expectedValue), 2))), // eslint-disable-next-line @babel/new-cap\n  \"\".concat(receivedLabel, \":\\n\").concat(context.utils.RECEIVED_COLOR((0, _redent.default)(display(context, receivedValue), 2)))].join('\\n');\n}\n\nfunction matches(textToMatch, matcher) {\n  if (matcher instanceof RegExp) {\n    return matcher.test(textToMatch);\n  } else {\n    return textToMatch.includes(String(matcher));\n  }\n}\n\nfunction deprecate(name, replacementText) {\n  // Notify user that they are using deprecated functionality.\n  // eslint-disable-next-line no-console\n  console.warn(\"Warning: \".concat(name, \" has been deprecated and will be removed in future updates.\"), replacementText);\n}\n\nfunction normalize(text) {\n  return text.replace(/\\s+/g, ' ').trim();\n}\n\nfunction getTag(element) {\n  return element.tagName && element.tagName.toLowerCase();\n}\n\nfunction getSelectValue(_ref2) {\n  var multiple = _ref2.multiple,\n      options = _ref2.options;\n\n  var selectedOptions = _toConsumableArray(options).filter(function (option) {\n    return option.selected;\n  });\n\n  if (multiple) {\n    return _toConsumableArray(selectedOptions).map(function (opt) {\n      return opt.value;\n    });\n  }\n  /* istanbul ignore if */\n\n\n  if (selectedOptions.length === 0) {\n    return undefined; // Couldn't make this happen, but just in case\n  }\n\n  return selectedOptions[0].value;\n}\n\nfunction getInputValue(inputElement) {\n  switch (inputElement.type) {\n    case 'number':\n      return inputElement.value === '' ? null : Number(inputElement.value);\n\n    case 'checkbox':\n      return inputElement.checked;\n\n    default:\n      return inputElement.value;\n  }\n}\n\nfunction getSingleElementValue(element) {\n  /* istanbul ignore if */\n  if (!element) {\n    return undefined;\n  }\n\n  switch (element.tagName.toLowerCase()) {\n    case 'input':\n      return getInputValue(element);\n\n    case 'select':\n      return getSelectValue(element);\n\n    default:\n      return element.value;\n  }\n}\n\nfunction compareArraysAsSet(a, b) {\n  if (Array.isArray(a) && Array.isArray(b)) {\n    return (0, _isEqual.default)(new Set(a), new Set(b));\n  }\n\n  return undefined;\n}\n\nfunction toSentence(array) {\n  var _ref3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref3$wordConnector = _ref3.wordConnector,\n      wordConnector = _ref3$wordConnector === void 0 ? ', ' : _ref3$wordConnector,\n      _ref3$lastWordConnect = _ref3.lastWordConnector,\n      lastWordConnector = _ref3$lastWordConnect === void 0 ? ' and ' : _ref3$lastWordConnect;\n\n  return [array.slice(0, -1).join(wordConnector), array[array.length - 1]].join(array.length > 1 ? lastWordConnector : '');\n}","map":null,"metadata":{},"sourceType":"script"}