{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toHaveAttribute = toHaveAttribute;\n\nvar _utils = require(\"./utils\");\n\nfunction printAttribute(stringify, name, value) {\n  return value === undefined ? name : \"\".concat(name, \"=\").concat(stringify(value));\n}\n\nfunction getAttributeComment(stringify, name, value) {\n  return value === undefined ? \"element.hasAttribute(\".concat(stringify(name), \")\") : \"element.getAttribute(\".concat(stringify(name), \") === \").concat(stringify(value));\n}\n\nfunction toHaveAttribute(htmlElement, name, expectedValue) {\n  var _this = this;\n\n  (0, _utils.checkHtmlElement)(htmlElement, toHaveAttribute, this);\n  var isExpectedValuePresent = expectedValue !== undefined;\n  var hasAttribute = htmlElement.hasAttribute(name);\n  var receivedValue = htmlElement.getAttribute(name);\n  return {\n    pass: isExpectedValuePresent ? hasAttribute && this.equals(receivedValue, expectedValue) : hasAttribute,\n    message: function message() {\n      var to = _this.isNot ? 'not to' : 'to';\n      var receivedAttribute = hasAttribute ? printAttribute(_this.utils.stringify, name, receivedValue) : null;\n\n      var matcher = _this.utils.matcherHint(\"\".concat(_this.isNot ? '.not' : '', \".toHaveAttribute\"), 'element', _this.utils.printExpected(name), {\n        secondArgument: isExpectedValuePresent ? _this.utils.printExpected(expectedValue) : undefined,\n        comment: getAttributeComment(_this.utils.stringify, name, expectedValue)\n      });\n\n      return (0, _utils.getMessage)(_this, matcher, \"Expected the element \".concat(to, \" have attribute\"), printAttribute(_this.utils.stringify, name, expectedValue), 'Received', receivedAttribute);\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"script"}